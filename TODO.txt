Aesthetics:
  Figure out placement for text console
  Modals Wireframes:
    Achievements
    Death
    Faction
    Inventory
    Options


Bugs:
  Fix CSS on Learn Spells modal
  Eating with the e hotkey doesn't gray out the button when you run out of food
  Users without sessions are crashing server, handle gracefully
  Off by one error on damage rendering
  Add more exception handling to make application more robust
  Don't show modal for a second while the page is loading
  Firefox bug: scrolling through spells only


Database:
  Disallow multiple accounts with same email
  Add foreign key constraints


Deployment:
  Add a build script to make the game work out of the box
  Put limits on the growth of the database tables (handle limits gracefully)
  Deploy on AWS
  Set up a "Let's Encrypt" certificate


Disaster Recovery:
  Make Postgres data redundant


Docs:
  Developer Docs:
    Automate setting up the Postgres tables
    Walk through instructions on another computer
    Walk through instructions with another person on another computer
  Player Docs:
    Make list of content needed


Features:
  Abilities:
    Learn spells
    Prepare spells
    Equip spells
    Cast spells with no effect
  Account System:
    Delete user
  Damage:
    Damage system with eating
  Leader Board:
    Richest faction
  Movement:
  Options:
    Sound settings
    Display settings
  World:

Organization:
  API:
  Code:
    Make blocks an object instead of integer ?
  Data:
    Get the spell data in one place, preferably Postgres
    Don't store the chunk data both in the worldGen and the game state
  File:
    Vendor in font dependencies


Performance:
  Minify everything sent to client (& make Angular controllers minify friendly)
  Use gzip

Security:
  Cheating:
    Stop trusting the client with character location
  Information Security:
    Write validation for user input
    Set up HTTPS with Express
    Hash, salt, and encrypt passwords in DB


Style:
  Add 'use strict' to all JavaScript files
  Remove all whitespace from ends of lines
  Standardize one line of whitespace at ends of files
  Try out TypeScript to replace some of the back end JavaScript
  Find a good naming convention for endpoints
  Set a fallback font for any non-standard fonts


Testing:
  Learn to use Protractor.js for front-end testing
  Increase unit test coverage
  Write integration tests
  Set up test coverage widget on GitHub
  Also test on IE, Edge, Firefox, Safari, and Opera browsers


User Testing:
  Have another person play the game once it's marginally fun
